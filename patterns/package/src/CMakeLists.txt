
# building sources
#common blocks
set(MPO700_COMMON_INC_DIR ${CMAKE_SOURCE_DIR}/include/mpo700_common)
install(DIRECTORY ${MPO700_COMMON_INC_DIR} DESTINATION ${INSTALL_HEADERS_PATH} FILES_MATCHING PATTERN "*.h")
set(MPO700_COMMON_SRC_DIR ${CMAKE_SOURCE_DIR}/src/mpo700_common)

## first library : driver for UDP communication with the robot ##
set(LIB_SRC_MPO700_INTERFACE "")
set(MPO700_INTERFACE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/mpo700_interface)
list(APPEND LIB_SRC_MPO700_INTERFACE ${MPO700_COMMON_SRC_DIR}/MPO700definitions.h)
list(APPEND LIB_SRC_MPO700_INTERFACE ${MPO700_INTERFACE_DIRECTORY}/MPO700udp.h)
list(APPEND LIB_SRC_MPO700_INTERFACE ${MPO700_INTERFACE_DIRECTORY}/MPO700udp.c)
list(APPEND LIB_SRC_MPO700_INTERFACE ${MPO700_INTERFACE_DIRECTORY}/MPO700interface.c)
list(APPEND LIB_SRC_MPO700_INTERFACE ${MPO700_INTERFACE_DIRECTORY}/MPO700internal.h)
list(APPEND LIB_SRC_MPO700_INTERFACE ${MPO700_INTERFACE_DIRECTORY}/MPO700internal.c)

option(MPO700_ROBOT_WITH_PRINT_MESSAGES "Package generates print in console" OFF)
if(MPO700_ROBOT_WITH_PRINT_MESSAGES)
add_definitions(-DPRINT_MESSAGES)
endif(MPO700_ROBOT_WITH_PRINT_MESSAGES)

add_library(mpo700_interface_st STATIC ${LIB_SRC_MPO700_INTERFACE})
target_link_libraries(mpo700_interface_st ${EXTERNAL_LIBS})
add_library(mpo700_interface SHARED ${LIB_SRC_MPO700_INTERFACE})
target_link_libraries(mpo700_interface ${EXTERNAL_LIBS})

# installing library
INSTALL(TARGETS mpo700_interface mpo700_interface_st
	RUNTIME DESTINATION ${INSTALL_BIN_PATH}/${INSTALL_PATH_SUFFIX}
	LIBRARY DESTINATION ${INSTALL_LIB_PATH}/${INSTALL_PATH_SUFFIX}
	ARCHIVE DESTINATION ${INSTALL_AR_PATH}/${INSTALL_PATH_SUFFIX}
)
set(MPO700_INTERFACE_INC_DIR ${CMAKE_SOURCE_DIR}/include/mpo700_interface)
install(DIRECTORY ${MPO700_INTERFACE_INC_DIR} DESTINATION ${INSTALL_HEADERS_PATH} FILES_MATCHING PATTERN "*.h")

## second library : communication library to embed in the robot in a ROS node ##
set(LIB_SRC_MPO700_SIDE "")
set(MPO700_SIDE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/mpo700_side)
list(APPEND LIB_SRC_MPO700_SIDE ${MPO700_COMMON_SRC_DIR}/MPO700definitions.h)
list(APPEND LIB_SRC_MPO700_SIDE ${MPO700_SIDE_DIRECTORY}/MPO700_side_communication.c)
list(APPEND LIB_SRC_MPO700_SIDE ${MPO700_SIDE_DIRECTORY}/MPO700_side_udp.h)
list(APPEND LIB_SRC_MPO700_SIDE ${MPO700_SIDE_DIRECTORY}/MPO700_side_udp.c)
list(APPEND LIB_SRC_MPO700_SIDE ${MPO700_SIDE_DIRECTORY}/MPO700_side_internal.h)
list(APPEND LIB_SRC_MPO700_SIDE ${MPO700_SIDE_DIRECTORY}/MPO700_side_internal.c)

option(MPO700_SIDE_WITH_PRINT_MESSAGES "Package generates print in console" OFF)
if(MPO700_SIDE_WITH_PRINT_MESSAGES)
add_definitions(-DPRINT_MESSAGES)
endif(MPO700_SIDE_WITH_PRINT_MESSAGES)

add_library(mpo700_side_st STATIC ${LIB_SRC_MPO700_SIDE})
target_link_libraries(mpo700_side_st ${EXTERNAL_LIBS})
add_library(mpo700_side SHARED ${LIB_SRC_MPO700_SIDE})
target_link_libraries(mpo700_side ${EXTERNAL_LIBS})

# installing library
INSTALL(TARGETS mpo700_side mpo700_side_st
	RUNTIME DESTINATION ${INSTALL_BIN_PATH}/${INSTALL_PATH_SUFFIX}
	LIBRARY DESTINATION ${INSTALL_LIB_PATH}/${INSTALL_PATH_SUFFIX}
	ARCHIVE DESTINATION ${INSTALL_AR_PATH}/${INSTALL_PATH_SUFFIX}
)
set(MPO700_SIDE_INC_DIR ${CMAKE_SOURCE_DIR}/include/mpo700_side)
install(DIRECTORY ${MPO700_SIDE_INC_DIR} DESTINATION ${INSTALL_HEADERS_PATH} FILES_MATCHING PATTERN "*.h")





