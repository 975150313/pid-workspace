#########################################################################################
#       This file is part of the program PID                                            #
#       Program description : build system supportting the PID methodology              #
#       Copyright (C) Robin Passama, LIRMM (Laboratoire d'Informatique de Robotique     #
#       et de Microelectronique de Montpellier). All Right reserved.                    #
#                                                                                       #
#       This software is free software: you can redistribute it and/or modify           #
#       it under the terms of the CeCILL-C license as published by                      #
#       the CEA CNRS INRIA, either version 1                                            #
#       of the License, or (at your option) any later version.                          #
#       This software is distributed in the hope that it will be useful,                #
#       but WITHOUT ANY WARRANTY; without even the implied warranty of                  #
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                    #
#       CeCILL-C License for more details.                                              #
#                                                                                       #
#       You can find the complete license description on the official website           #
#       of the CeCILL licenses family (http://www.cecill.info/index.en.html)            #
#########################################################################################

### root function to manage plugin activation
function(manage_Plugins)
include(${WORKSPACE_DIR}/pid/Workspace_Plugins_Info.cmake OPTIONAL RESULT_VARIABLE res)
if(NOT res STREQUAL NOTFOUND)
	if(WORKSPACE_ACTIVE_PLUGINS)
		foreach(plugin IN ITEMS  ${WORKSPACE_ACTIVE_PLUGINS})
			if(${plugin}_PLUGIN_RESIDUAL_FILES)# if the plugin generates residual files we need to exclude them from source tree using .gitignore
				dereference_Residual_Files(${plugin})
			endif()
			activate_Plugin(${plugin})
		endforeach()
	endif()
endif()
endfunction(manage_Plugins)

## subsidiary function to manage the activation of a given plugin
function(activate_Plugin plugin)
	include(${WORKSPACE_DIR}/share/cmake/plugins/${plugin}/plugin_activate.cmake OPTIONAL RESULT_VARIABLE res)#activation simply consists in adding the good cmake script
	if(res STREQUAL NOTFOUND)
		message("[PID] WARNING: plugin ${plugin} is corrupted, no file to activate it.")
	else()
		if(ADDITIONNAL_DEBUG_INFO)
			message("[PID] ${${plugin}_PLUGIN_ACTIVATION_MESSAGE}.")
		endif()
	endif()

endfunction(activate_Plugin)

## subsidiary function to ensure that git will ignore residual files generated by a given plugin
function(dereference_Residual_Files plugin)
if (NOT ${plugin}_PLUGIN_RESIDUAL_FILES)
	return()
endif()

set(PATH_TO_IGNORE ${CMAKE_SOURCE_DIR}/.gitignore)
file(STRINGS ${PATH_TO_IGNORE} IGNORED_FILES)
if(NOT IGNORED_FILES) #simply write the file from scratch if there is nothing ingnored from now
	file(WRITE ${PATH_TO_IGNORE} "")
	foreach(ignored IN ITEMS ${plugin}_PLUGIN_RESIDUAL_FILES)
		file(APPEND ${PATH_TO_IGNORE} "${ignored}\n")
	endforeach()
	execute_process(COMMAND git add ${PATH_TO_IGNORE} WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}) #immediately add it to git reference system to avoid big troubles
	return()
endif()

set(rules_added FALSE)
foreach(ignored IN ITEMS ${${plugin}_PLUGIN_RESIDUAL_FILES})
	set(add_rule TRUE)
	foreach(already_ignored IN ITEMS ${IGNORED_FILES}) #looking if this ignore rule is already written in the .gitignore file
		if(already_ignored STREQUAL ignored)
			set(add_rule FALSE)
			break()
		endif()
	endforeach()
	if(add_rule) #only add te ignore rule if necessary
		file(APPEND ${PATH_TO_IGNORE} "${ignored}\n")
		set(rules_added TRUE)
	endif()
endforeach()
if(rules_added)
	execute_process(COMMAND git add ${PATH_TO_IGNORE} WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}) #immediately add it to git reference system to avoid big troubles
endif()
endfunction(dereference_Residual_Files)
