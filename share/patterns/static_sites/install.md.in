
# Install

@PROJECT_NAME@ can be deployed as any other native PID package. To know more about PID methodology simply follow [this link](https://gite.lirmm.fr/pid/pid-workspace/wikis/home).

PID provides different alternatives to install a package:

## Automatic install by dependencies declaration

The package @PROJECT_NAME@ will be installed automatically if it is a direct or undirect dependency of one of the packages you are developing. See [import section](#import).

## Manual install using PID command

The package @PROJECT_NAME@ can be installed "by hand" using command provided by the PID workspace:

```
cd <pid-workspace>/pid
make deploy package=@PROJECT_NAME@
```

Or if you want to install a specific binary version of this package, for instance for the last version:

```
cd <pid-workspace>/pid
make deploy package=@PROJECT_NAME@ version=@PACKAGE_LAST_VERSION_WITH_PATCH@
```

## Manual Installation 

The last possible action is to install it by hand without using PID commands. This is **not recommended** but could be **helpfull to install another repository of this package (not the official package repository)**. For instance if you fork the official repository to work isolated from official developers you may need this alternative.  

1. Cloning the official repository of @PROJECT_NAME@ with git

	```
	cd <pid-workspace>/packages/ && git clone @OFFICIAL_REPOSITORY_ADDRESS@
	```

	or if your are involved in @PROJECT_NAME@ development and forked the @PROJECT_NAME@ official respository (using gitlab), you can prefer doing:

	```
	cd <pid-workspace>/packages/ && git clone @GIT_SERVER@:<your account>/@PROJECT_NAME@.git
	```

2. Building the repository

	```
	cd <pid-workspace>/packages/@PROJECT_NAME@/build
	cmake .. && make build
	```

