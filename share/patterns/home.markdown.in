
@LINK_TO_PARENT_WIKI@

# Introduction

@WIKI_INTRODUCTION@

# General Information

## Authors

Package manager: @PACKAGE_CONTACT@

Authors of this package: 
@PACKAGE_ALL_AUTHORS@

## License

The license of the current release version of knowbotics package is : **@PACKAGE_LICENSE_FOR_WIKI@**. It applies to the whole package content.

For more details see [license file](license.txt).

## Version

Last released version (more recent version tag on master branch) : @PACKAGE_LAST_VERSION_FOR_WIKI@.

## Categories

@PACKAGE_CATEGORIES_LIST@

# Install

@PROJECT_NAME@ can be deployed as any other native PID package. To know more about PID methodology simply follow [this link](https://gite.lirmm.fr/pid/pid-workspace/wikis/home).

PID provides different alternatives to install a package:

## Automatic install by dependencies declaration

The package @PROJECT_NAME@ will be installed automatically if it is a direct or undirect dependency of one of the packages you are developing. See [import section](#import).

## Manual install using PID command

The package @PROJECT_NAME@ can be installed "by hand" using command provided by the PID workspace:

```
cd <pid-workspace>/pid
make deploy name=@PROJECT_NAME@
```

Or if you want to install a specific binary version of this package, for instance for the last version:

```
cd <pid-workspace>/pid
make deploy name=@PROJECT_NAME@ version=@PACKAGE_LAST_VERSION_WITH_PATCH@
```

## Manual Installation 

The last possible action is to install it by hand without using PID commands. This is **not recommended** but could be **helpfull to install another repository of this package (not the official package repository)**. For instance if you fork the official repository to work isolated from official developers you may need this alternative.  

1. Cloning the repository with git

	```
	cd <pid-workspace>/packages/ && git clone git@gite.lirmm.fr:knowbotics/knowbotics.git
	```

	or if your are involved in knowbotics development and forked the knowbotics respository using gitlab, you can prefer doing:

	```
	cd <pid-workspace>/packages/ && git clone git@gite.lirmm.fr:<your account>/knowbotics.git
	```

2. Building the repository

	```
	cd <pid-workspace>/packages/knowbotics/build
	cmake .. && make build
	```


# Dependencies

@PACKAGE_DEPENDENCIES_DESCRIPTION@

# Import

You can import @PROJECT_NAME@ as usual with PID. In the root CMakelists.txt file of your package, after the package delcaration you have to put something like:

```
find_package (@PROJECT_NAME@ REQUIRED)
declare_PID_Package_Dependency(PACKAGE @PROJECT_NAME@ NATIVE)
```
It will try to install last version of the package.

If you want a specific version (recommended), for instance the currenlty last released version:

```
find_package (@PROJECT_NAME@ @PACKAGE_LAST_VERSION_WITH_PATCH@ REQUIRED)
declare_PID_Package_Dependency(PACKAGE @PROJECT_NAME@ NATIVE VERSION @PACKAGE_LAST_VERSION_WITHOUT_PATCH@)
```

Notice that PID will automatically install the last available patch version of the package when configuring the project with the option `REQUIRED_PACKAGES_AUTOMATIC_DOWNLOAD` to **ON** (default value).

# Components
@PACKAGE_COMPONENTS_DESCRIPTION@


@PACKAGE_ADDITIONAL_CONTENT@

# API

The API doxygen documentation of the package can be found [here](api-doc/html/index.html).

@LINK_TO_PARENT_WIKI@
